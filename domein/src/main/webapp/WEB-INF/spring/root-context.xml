<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- DB Bean 등록하기 
		1. DB연결정보를 가지는 객체를 bean으로 등록 -> BasicDataSource
		2. DataSource정보를 가지고 Connection(SqlSession)을 
		생성해주는 객체를 bean으로 등록 ->SqlSessionFactoryBean
		3. SqlSessionFactoryBean을 이용하는 객체를 bean으로 등록 ->
		SqlSessionTemplate
	-->
	<!-- 기본적인 DB에 접속할 데이터(url,드라이버, 계정, 비밀번호)를 저장하는 객체 -->
	<bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@mightymosses.hopto.org:5959:xe"></property>
		<property name="username" value="col"></property>
		<property name="password" value="col"></property>
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"></constructor-arg>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"></property>
				<property name="sqlPrefix" value="[SQL]"></property>
			</bean>
		</property>
	</bean>
	
	<!-- Mybatis SqlSession을 생성하는 객체 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
	
	<!-- 트랜잭션 처리하기
	트랜잭션 매니저 등록하기 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 어노테이션 방식 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="domein2020@gmail.com"/>
		<property name="password" value="colofduty2020"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
</beans>
